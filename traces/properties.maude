in scenario2.maude .

in model-checker .

mod PROPOSITIONS is
  pr TRACE .
  inc SATISFACTION .
  subsort AWState < State .
  var OBJs : Set{Object} .
  vars POSE POSE2 : Pose .
  vars TWIST ACCEL TWIST2 ACCEL2 : Twist .
  vars X Y Z SPEED DIS X2 T T2 Y2 DELAY : FloatOrInt .
  vars V V2 V3 V4 P P2 : Vector3 .
  vars Q Q2 : Quaternion .
  vars STR STR2 : String .
  vars AWST : AWState .
  var PROP : Prop .

  op pos-diff(_,_)<_ : String String FloatOrInt -> Prop .
  op pos-diff(_,_)>_ : String String FloatOrInt -> Prop .
  op pos-diff(_,_)<=_ : String String FloatOrInt -> Prop .
  op pos-diff(_,_)>=_ : String String FloatOrInt -> Prop .
  op speed(_)<_ : String FloatOrInt -> Prop .
  op speed(_)>_ : String FloatOrInt -> Prop .
  op speed(_)<=_ : String FloatOrInt -> Prop .
  op speed(_)>=_ : String FloatOrInt -> Prop .
  op timeStamp`<_ : FloatOrInt -> Prop .
  op timeStamp`>_ : FloatOrInt -> Prop .
  op timeStamp`<=_ : FloatOrInt -> Prop .
  op timeStamp`>=_ : FloatOrInt -> Prop .
  --- NPC name and position distance difference
  op perp-pos-diff(_)<_ : String FloatOrInt -> Prop .
  op perp-pos-diff(_)<=_ : String FloatOrInt -> Prop .
  op perp-pos-diff(_)>_ : String FloatOrInt -> Prop .
  op perp-pos-diff(_)>=_ : String FloatOrInt -> Prop .

  ceq AWST |= timeStamp < T = true
    if timeStamp(AWST) < T .
  ceq AWST |= timeStamp > T = true
    if timeStamp(AWST) > T .
  ceq AWST |= timeStamp <= T = true
    if timeStamp(AWST) <= T .
  ceq AWST |= timeStamp >= T = true
    if timeStamp(AWST) >= T .

  ceq AWST |= speed(STR) < X = true
    if gtSpeed(AWST, STR) < X .
  ceq AWST |= speed(STR) > X = true
    if gtSpeed(AWST, STR) > X .
  ceq AWST |= speed(STR) <= X = true
    if gtSpeed(AWST, STR) <= X .
  ceq AWST |= speed(STR) >= X = true
    if gtSpeed(AWST, STR) >= X .

  ceq AWST |= pos-diff(STR, STR2) < X = true
    if magnitudeIgnoreY(pos-diff(AWST, STR, STR2)) < X .
  ceq AWST |= pos-diff(STR, STR2) > X = true
    if magnitudeIgnoreY(pos-diff(AWST, STR, STR2)) > X .
  ceq AWST |= pos-diff(STR, STR2) <= X = true
    if magnitudeIgnoreY(pos-diff(AWST, STR, STR2)) <= X .
  ceq AWST |= pos-diff(STR, STR2) >= X = true
    if magnitudeIgnoreY(pos-diff(AWST, STR, STR2)) >= X .

  ceq AWST |= perp-pos-diff(STR) < X = true
    if magnitudeIgnoreY(perp-pos-diff(AWST, STR)) < X .
  ceq AWST |= perp-pos-diff(STR) > X = true
    if magnitudeIgnoreY(perp-pos-diff(AWST, STR)) > X .
  ceq AWST |= perp-pos-diff(STR) <= X = true
    if magnitudeIgnoreY(perp-pos-diff(AWST, STR)) <= X .
  ceq AWST |= perp-pos-diff(STR) >= X = true
    if magnitudeIgnoreY(perp-pos-diff(AWST, STR)) >= X .
  
  eq T # {OBJs} |= PROP = false [owise] .
endm

mod PROPERTIES-CHECK is
  inc PROPOSITIONS .
  inc MODEL-CHECKER .
  inc LTL-SIMPLIFIER .

  op next : Formula Nat -> Formula .
  --- op perp-pos-diff'(_)<_ : String FloatOrInt -> Formula .
  --- op perp-pos-diff'(_,_)<_ : String Nat FloatOrInt -> Formula .
  op nextIterAux : Nat Formula -> Formula .
  
  var OBJs : Set{Object} .
  vars X Y Z T T2 DELAY : FloatOrInt .
  vars STR STR2 : String .
  vars AWST : AWState .
  vars N : Nat .
  var F : Formula .

  eq next(F, 0) = F .
  eq next(F, s(N)) = nextIterAux(s(N), F) \/ next(F, N) .

  eq nextIterAux(s(N), F) = O nextIterAux(N, F) .
  eq nextIterAux(0, F) = F .

  ops p1 p2 p3 p4 : -> Formula .

  eq p1 = [] (pos-diff("ego", "npc1") > 10) .

  --- when the distance between ego and an NPC < 20m, ego's speed should be less than 10m/s
  eq p2 = [] (pos-diff("ego", "npc1") < 20 -> speed("ego") < 3) .
  eq p3 = [] (pos-diff("ego", "npc1") < 10 -> perp-pos-diff("npc1") < 500) .

endm

***(
red in PROPERTIES-CHECK : modelCheck(init, <>
  (timeStamp > 10 /\ pos-diff("ego", "npc1") <= 40)) .
eof
)

red in PROPERTIES-CHECK : modelCheck(init, [] 
  ((timeStamp > 11.5 /\ timeStamp < 70 /\ pos-diff("ego", "npc1") <= 10) 
    -> next(perp-pos-diff("npc1") < 10, 16))) .
eof

--- SAT
red in PROPERTIES-CHECK : modelCheck(init, [] 
  ((timeStamp > 20 /\ timeStamp < 70 /\ pos-diff("ego", "npc1") <= 10) 
    -> next(perp-pos-diff("npc1") < 5.55, 16))) .
eof
red in PROPERTIES-CHECK : modelCheck(init, []
  ((timeStamp >= 12 /\ timeStamp <= 60 /\ pos-diff("ego", "npc1") <= 10) 
    -> next(perp-pos-diff("npc1") < 1.8, 10))) .
eof